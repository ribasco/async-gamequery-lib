name: Release Builds

on:
  release:
    types: [ published ]

jobs:
  build-project:
    name: 'Release'
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [ '8' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          check-latest: true
          java-version: ${{ matrix.java }}

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/tags/})"
        id: extract_branch

      - name: Output branch name
        run: echo ${{ steps.extract_branch.outputs.branch }}

      - name: Build Java Project
        run: mvn install -P'release' -Dchangelist= -Dlicense.skipUpdateLicense=true -DskipTests=true -B -V --file pom.xml

      - name: Unit Tests
        run: mvn test

      - name: Integration Tests
        run: mvn verify

      - name: Set up for Sonatype
        uses: actions/setup-java@v2
        with: # running setup-java again overwrites the settings.xml
          distribution: 'temurin'
          check-latest: true
          java-version: ${{ matrix.java }}
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: SONATYPE_USERNAME # env variable for username in deploy
          server-password: SONATYPE_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_AUTHOR_PRIVATEKEY }} # Value of the GPG private key to import
          gpg-passphrase: GPG_AUTHOR_PASSPHRASE # env variable for GPG private key passphrase

      - name: Publish to Sonatype (Staging)
        run: mvn --batch-mode deploy -P'release' -Dchangelist= -DskipTests=true
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_AUTHOR_PASSPHRASE: ${{ secrets.GPG_AUTHOR_PASSPHRASE }}

      # - name: Set up for GitHub Packages
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: '8'
      #     distribution: 'adopt'

      # - name: Publish to GitHub Packages
      #   run: mvn --batch-mode deploy -P'release,deploy-github' -Dchangelist= -DskipTests=true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
